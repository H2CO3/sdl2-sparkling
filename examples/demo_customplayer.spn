// Loading library
let SDL = dynld("sdl2");

// States
let states = {
	quit : false
};

// Opening music
let music = SDL::OpenMusic(44100, "S16", 2, 2048);

// Creating custom player
let myMusicPlayer = fn (pos, stream, len) {
    // fill buffer with music
    for let i = 0; i < len; i++ {
		stream[i] = i + pos;
	}

    // set udata for next time
	pos += len;
	return pos;
};

// Hooking custom player
music.hook(myMusicPlayer, 0);


// looping
while (!states["quit"]) {
	let event;
	while (event = SDL::PollEvent()) != nil {
		if event.type == "quit" {
			states["quit"] = true;
		}
	}

	SDL::Delay(5); // Ease the CPU load
}
